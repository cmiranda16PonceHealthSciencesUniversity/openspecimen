<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
	<class name="com.krishagni.catissueplus.core.common.domain.ConfigSetting"
		table="OS_CFG_SETTINGS">
		<id name="id" column="IDENTIFIER">
			<generator class="native">
				<param name="sequence">OS_CFG_SETTINGS_SEQ</param>
			</generator>
		</id>

		<many-to-one name="property" column="PROPERTY_ID"
			not-null="true" />

		<property name="value" column="VALUE" />

		<many-to-one name="activatedBy" column="ACTIVATED_BY"
			not-null="true" />

		<property name="activationDate" column="ACTIVATION_DATE"
			not-null="true" />

		<property name="activityStatus" column="ACTIVITY_STATUS"
			not-null="true" />

		<property name="level" column="LEVEL">
			<type name="org.hibernate.type.EnumType">
				<param name="enumClass">com.krishagni.catissueplus.core.common.domain.ConfigProperty$Level</param>
				<param name="type">12</param>
			</type>
		</property>

		<property name="objectId" column="OBJECT_ID" />

		<query name="getAll">
			select
			cprop, cs
			from
			com.krishagni.catissueplus.core.common.domain.ConfigProperty cprop
			inner join  cprop.module cm
			left join  cprop.settings cs
			where
			:level in elements(cprop.levels) and
			(:moduleName is null or cm.name = :moduleName) and
			(
			  cs.id is null or (
			  ((:objectId is null and cs.objectId is null) or cs.objectId = :objectId) and
			  cs.activityStatus = 'Active'
			  )
			)
		</query>

		<query name="getAllLaterThan"> select cs from com.krishagni.catissueplus.core.common.domain.ConfigSetting
			cs where cs.activityStatus = 'Active' and cs.id > :settingId </query>

		<query name="getSettingByModuleAndProp">
			select
			cs
			from
			com.krishagni.catissueplus.core.common.domain.ConfigSetting cs
			join cs.property prop
			join prop.module module
			where
			module.name = :moduleName and
			prop.name = :propName and
			cs.level = :level and
			((:objectId is null and cs.objectId is null) or cs.objectId = :objectId) and
			cs.activityStatus = 'Active'
		</query>
	</class>
</hibernate-mapping>
